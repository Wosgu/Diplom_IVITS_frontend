import { useState, useEffect } from 'react';
import './abitur.css';

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º—ã
interface Program {
    id: number;
    code: string;
    name: string;
    program_name: string;
    form: string;
    description: string;
    department: {
        id: number;
        name: string;
    };
    level: {
        id: number;
        name: string;
        code: string;
    };
    features: Array<{
        id: number;
        title: string;
        description: string;
        program: number;
    }>;
    career_opportunities: string[];
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ—Ç–≤–µ—Ç–∞ API (–º–æ–∂–µ—Ç –±—ã—Ç—å –º–∞—Å—Å–∏–≤–æ–º –∏–ª–∏ –æ–±—ä–µ–∫—Ç–æ–º —Å –¥–∞–Ω–Ω—ã–º–∏)
interface ApiResponse {
    results?: Program[]; // –î–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    programs?: Program[]; // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ –∏–º—è
    // –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –º–∞—Å—Å–∏–≤ –ø—Ä–æ–≥—Ä–∞–º–º
}

export const Abitur = () => {
    const [showTable, setShowTable] = useState(false);
    const [data, setData] = useState<Program[]>([]);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState<string | null>(null);

    useEffect(() => {
        if (showTable) {
            const fetchData = async () => {
                setLoading(true);
                setError(null);
                try {
                    const response = await fetch('https://tamik327.pythonanywhere.com/api/programs/');
                    
                    if (!response.ok) {
                        throw new Error(`–û—à–∏–±–∫–∞ HTTP! –°—Ç–∞—Ç—É—Å: ${response.status}`);
                    }
                    
                    const result: ApiResponse | Program[] = await response.json();
                    
                    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –æ—Ç–≤–µ—Ç–∞
                    let programs: Program[] = [];
                    if (Array.isArray(result)) {
                        programs = result;
                    } else if (result.results && Array.isArray(result.results)) {
                        programs = result.results;
                    } else if (result.programs && Array.isArray(result.programs)) {
                        programs = result.programs;
                    }
                    
                    setData(programs);
                } catch (err) {
                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:', err);
                    setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                } finally {
                    setLoading(false);
                }
            };
            
            fetchData();
        }
    }, [showTable]);

    return (
        <div className="abitur-container">
            <h2 className='priv'>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Ç–µ–±—è, —É–≤–∞–∂–∞–µ–º—ã–π –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç!</h2>
            
            {/* –í–∏–¥–µ–æ –±–ª–æ–∫ */}
            <div className='video-abitur'>
                <iframe 
                    src="https://vk.com/video_ext.php?oid=-225482243&id=456239028&hash=79ad4cf4a97f74c3" 
                    allow="autoplay; encrypted-media" 
                    title="–í–∏–¥–µ–æ –¥–ª—è –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤"
                ></iframe>
            </div>
            
            {/* –ë–ª–æ–∫ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ */}
            <div className="admission-hero">
                <h1 className="hero-title">
                    üöÄ –¢–≤–æ–π —Å—Ç–∞—Ä—Ç –≤ –ò–¢-–∏–Ω–¥—É—Å—Ç—Ä–∏–∏<br/>
                    <span>–£—á–∏—Å—å —É –ª—É—á—à–∏—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ –†–æ—Å—Å–∏–∏</span>
                </h1>
                
                <div className="benefits-grid">
                    {/* –ö–∞—Ä—Ç–æ—á–∫–∞ —Å–æ —Å—Ç–∏–ø–µ–Ω–¥–∏–µ–π */}
                    <div className="benefit-card money-pulse">
                        <div className="glow-effect"></div>
                        <img src="/stipendia.png" alt="–°—Ç–∏–ø–µ–Ω–¥–∏—è" className="floating-icon"/>
                        <h2>330 000‚ÇΩ</h2>
                        <p>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç–∏–ø–µ–Ω–¥–∏—è<br/>–∑–∞ 100 –±–∞–ª–ª–æ–≤ –ï–ì–≠</p>
                        <div className="sparkles"></div>
                    </div>

                    {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –ø—Ä–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π */}
                    <div className="benefit-card professor-card tilted">
                        <div className="hologram-effect"></div>
                        <img src="/mfti.png" alt="–ú–§–¢–ò" className="mfti-logo"/>
                        <div className="content">
                            <h3>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏<br/>–ú–§–¢–ò</h3>
                            <p>–õ–∏–¥–µ—Ä —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è</p>
                            <div className="science-icons">üß™üî≠üíª</div>
                        </div>
                    </div>

                    {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –ø—Ä–æ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ */}
                    <div className="benefit-card job-glow">
                        <div className="companies-logos">
                            <img src="/yandex.svg" alt="Yandex"/>
                            <img src="/sovcombank.png" alt="–°–æ–≤–∫–æ–º–±–∞–Ω–∫"/>
                        </div>
                        <h2>–†–∞–±–æ—Ç–∞ –ø–æ—Å–ª–µ 2 –∫—É—Ä—Å–∞</h2>
                        <p>–ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏:<br/>Yandex, –°–æ–≤–∫–æ–º–±–∞–Ω–∫, –ú–ú–¢–†</p>
                        <div className="connection-lines"></div>
                    </div>

                    {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –ø—Ä–æ —Ö–∞–∫–∞—Ç–æ–Ω—ã */}
                    <div className="benefit-card hackathon-bg">
                        <div className="animated-icons">
                            <div className="icon">üèÜ</div>
                            <div className="icon">üí°</div>
                            <div className="icon">üë®üíª</div>
                        </div>
                        <h2>–û–±—É—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–∞–∫—Ç–∏–∫—É</h2>
                        <ul>
                            <li>–†–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã</li>
                            <li>–•–∞–∫–∞—Ç–æ–Ω—ã</li>
                            <li>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥</li>
                        </ul>
                    </div>

                    {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –ø—Ä–æ –≥–µ–æ–≥—Ä–∞—Ñ–∏—é */}
                    <div className="benefit-card map-card tilted">
                        <img src="/russia-map.png" alt="–ö–∞—Ä—Ç–∞ –†–æ—Å—Å–∏–∏" className="map-image"/>
                        <div className="cities-dots">
                            <span className="dot moscow"></span>
                            <span className="dot spb"></span>
                        </div>
                        <h2>–≠–∫—Å–ø–µ—Ä—Ç—ã –∏–∑ 10 –≥–æ—Ä–æ–¥–æ–≤</h2>
                        <p>–õ—É—á—à–∏–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã —Å—Ç—Ä–∞–Ω—ã –≤ –ö–æ—Å—Ç—Ä–æ–º–µ</p>
                    </div>
                </div>
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ç–∞–±–ª–∏—Ü—ã */}
            <button 
                className={`toggle-button ${showTable ? 'active' : ''}`}
                onClick={() => setShowTable(!showTable)}
            >
                <span>–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏</span>
                <svg className="arrow" viewBox="0 0 24 24">
                    <path d="M7 10l5 5 5-5z"/>
                </svg>
            </button>

            {/* –ë–ª–æ–∫ —Å —Ç–∞–±–ª–∏—Ü–µ–π */}
            {showTable && (
                <div className="table-container">
                    {loading ? (
                        <div className="loading-message">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</div>
                    ) : error ? (
                        <div className="error-message">{error}</div>
                    ) : (
                        <table>
                            <thead>
                                <tr>
                                    <th>–ö–æ–¥ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è</th>
                                    <th>–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã</th>
                                    <th>–£—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è</th>
                                    <th>–§–æ—Ä–º–∞ –æ–±—É—á–µ–Ω–∏—è</th>
                                    <th>–û–ø–∏—Å–∞–Ω–∏–µ</th>
                                </tr>
                            </thead>
                            <tbody>
                                {data.length > 0 ? (
                                    data.map((item) => (
                                        <tr key={item.id}>
                                            <td>{item.code}</td>
                                            <td>{item.program_name}</td>
                                            <td>{item.level.name}</td>
                                            <td>{item.form}</td>
                                            <td>{item.description}</td>
                                        </tr>
                                    ))
                                ) : (
                                    <tr>
                                        <td colSpan={5} style={{textAlign: 'center'}}>
                                            –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                                        </td>
                                    </tr>
                                )}
                            </tbody>
                        </table>
                    )}
                </div>
            )}
        </div>
    );
};